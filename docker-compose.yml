version: '3.9'

networks:
  local-dev:
    external: true

services:
  kenshiapi:
    depends_on:
      - redis
      - kenshirabbitmq
      - db-azure
    restart: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    build:
      context: .
      dockerfile: Kenshi.API/Dockerfile
    image: piotrlanger/kenshiapi
    env_file:
      - db.env
    ports:
      - 3330:3330
      - 3331:3331
    environment:
      - "ASPNETCORE_URLS=http://+:3330"
      - "REDIS_HOST=redis"
    networks:
      - local-dev
        
  kenshi-web:
    depends_on:
      - db-azure
    restart: on-failure
    build:
      context: .
      dockerfile: Kenshi.Web.App/Dockerfile
    ports:
      - 7119:7119
      - 5151:5151
    environment:
      - "ASPNETCORE_URLS=http://+:5151"
    networks:
      - local-dev
        
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./data:/data
    networks:
      - local-dev
    
  db-azure:
    image: mcr.microsoft.com/azure-sql-edge
    hostname: db-azure
    env_file:
      - db.env
    environment:
      MSSQL_USER: "SA"
      MSSQL_PID: "DEVELOPER"
      ACCEPT_EULA: "1"
    volumes:
      - db_data:/var/opt/mssql
    restart: unless-stopped
    ports:
      - "1434:1433"
    networks:
      - local-dev
    
  kenshirabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5673:5672'
      - '15673:15672'
    environment:
      HOST_PORT_RABBIT: 5672
      HOST_PORT_RABBIT_MGMT: 15672
    networks:
      - local-dev

#  grafana:
#    image: grafana/grafana
#    ports:
#      - 3001:3000
#    environment:
#      GF_SECURITY_ADMIN_USER: admin
#      GF_SECURITY_ADMIN_PASSWORD: admin
#    volumes:
#      - grafana-data:/var/lib/grafana
#    networks:
#      - local-dev
    
#  prometheus:
#    image: prom/prometheus
#    ports:
#      - 9091:9090
#    volumes:
#      - prometheus-data:/prometheus
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#    restart: unless-stopped
#    command:
#      - "--config.file=/etc/prometheus/prometheus.yml"
#    networks:
#      - local-dev
  
#  elasticsearch:
#    image: elasticsearch:7.17.7
#    ports:
#      - 9201:9200
#      - 9301:9300
#    volumes:
#      - elasticsearch-data:/usr/share/elasticsearch/data
#    environment:
#      ES_JAVA_OPTS: "-Xms128m -Xms128m"
#      discovery.type: single-node
#      http.cors.enabled: true
#      http.cors.allow-origin: "*"
#    networks:
#      - local-dev
        
volumes:
  grafana-data:
    driver: local
  prometheus-data:
    driver: local
  elasticsearch-data:
    driver: local
  db_data:
    driver: local